import org.ajoberstar.grgit.Credentials
import org.ajoberstar.grgit.Grgit

plugins {
    id 'groovy'
    id 'java'
    id 'checkstyle'
    id "org.ajoberstar.grgit" version "3.1.1"
}

group 'ru.sberbank.school'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

subprojects {
    version = project.properties['version']
}

def gitUser = hasProperty('gitUser') ? gitUser : null
def gitPass = hasProperty('gitPass') ? gitPass : null

def sherlockPath = File.createTempDir()
sherlockPath.deleteOnExit()

task forceRebase {
    doFirst {
        def target = project.hasProperty("targetBranch")
        def source = project.hasProperty("sourceBranch")
        def sourceUrl = project.hasProperty("sourceUrl")
        if (!target || !source || !sourceUrl) {
            println 'MISSING PARAMS'
        }
        def grgit = Grgit.open(dir: project.file('.'))
        grgit.fetch { remote: 'https://github.com/sberbankjavaschool/homework.git' }
        grgit.pull(remote: 'https://github.com/sberbankjavaschool/homework.git', branch: 'source', rebase: true)
        grgit.push(remote: 'https://github.com/sberbankjavaschool/homework.git', branch: target)
        grgit.push(remote: sourceUrl, branch: source)
    }
}

task checkoutSherlock {
    doFirst {
        if (gitUser == null) {
            println "MISSING 'GIT USER'"
        }
        def grgit = Grgit.clone(dir: sherlockPath,
                uri: "https://github.com/jenkins-java-school-2019/sherlock.git",
                credentials: new Credentials(gitUser, gitPass))
    }
}

task clearSherlock {
    doFirst {
        def file = new File("./watson/src")
        println file.absolutePath
        file.deleteDir()
    }
}

task copySherlock(type: Copy) {
    dependsOn clearSherlock
    dependsOn checkoutSherlock

    from file("${sherlockPath}/src/test/")
    into file("./watson/src/test/")
}

task runSherlock() {
    dependsOn ':watson:test'
}

dependencies {
    compile 'commons-io:commons-io:2.6'
    compile 'org.ajoberstar.grgit:grgit-core:3.1.1'

    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.0"
    testRuntime "org.junit.vintage:junit-vintage-engine:5.3.0"
}