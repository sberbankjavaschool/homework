package ru.sberbank.school.task06;

import java.util.Map;

public interface CountMap<K> {
    /**
     * Добавление элепмента в контейнер.
     *
     * @param o элемент для добавления
     */
    void add(K o);

    /**
     * Получение количества вхождений данного элемента.
     *
     * @param o элемент
     * @return количество вхождений эелемента
     */
    int getCount(K o);

    //Удаляет элемент и контейнера и возвращает количество его добавлений(до удаления)

    /**
     * Удаление элемента из контейнера (полностью).
     *
     * @param o элемент
     * @return количество добавлений элемента(до удаления)
     */
    int remove(K o);

    /**
     * Получение количества разных элементов.
     *
     * @return количество разных элементов.
     */
    int size();

    /**
     * Добавление всех элементов из коллекции source в текущий контейнер. При совпадениии ключей,
     * счётчики увеличивается.
     *
     * @param source коллекция - источник
     */
    void addAll(CountMap<? extends K> source);

    //Вернуть java.util.Map. ключ - добавленный элемент, значение - количество его добавлений

    /**
     * Трансформация текущего контейнеру к контейнеру java.util.Map. Ключ - добавленный элемент,
     * значение - количество его добавлений.
     *
     * @return контейнер java.util.Map
     */
    Map<K,Integer> toMap();


    /**
     * Тот же контракт, что и у toMap(), но результат записать в destination.
     */
    void toMap(Map<? super K, Integer> destination);
}
